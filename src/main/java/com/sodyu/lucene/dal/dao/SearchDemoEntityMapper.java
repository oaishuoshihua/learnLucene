package com.sodyu.lucene.dal.dao;

import com.sodyu.lucene.dal.entity.SearchDemoEntity;
import com.sodyu.lucene.dal.entity.SearchDemoEntityExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SearchDemoEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @SelectProvider(type=SearchDemoEntitySqlProvider.class, method="countByExample")
    int countByExample(SearchDemoEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @DeleteProvider(type=SearchDemoEntitySqlProvider.class, method="deleteByExample")
    int deleteByExample(SearchDemoEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @Delete({
        "delete from demo",
        "where ID = #{ID,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long ID);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @Insert({
        "insert into demo (ID, spotID, ",
        "spotName, ename, ",
        "lat, lon, address, ",
        "districtName, cityName, ",
        "provinceName, countryName, ",
        "themeTags, attentionDegree, ",
        "createTime)",
        "values (#{ID,jdbcType=BIGINT}, #{spotID,jdbcType=BIGINT}, ",
        "#{spotName,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR}, ",
        "#{lat,jdbcType=DOUBLE}, #{lon,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR}, ",
        "#{districtName,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, ",
        "#{provinceName,jdbcType=VARCHAR}, #{countryName,jdbcType=VARCHAR}, ",
        "#{themeTags,jdbcType=VARCHAR}, #{attentionDegree,jdbcType=DOUBLE}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(SearchDemoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @InsertProvider(type=SearchDemoEntitySqlProvider.class, method="insertSelective")
    int insertSelective(SearchDemoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @SelectProvider(type=SearchDemoEntitySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="ID", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="spotID", property="spotID", jdbcType=JdbcType.BIGINT),
        @Result(column="spotName", property="spotName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ename", property="ename", jdbcType=JdbcType.VARCHAR),
        @Result(column="lat", property="lat", jdbcType=JdbcType.DOUBLE),
        @Result(column="lon", property="lon", jdbcType=JdbcType.DOUBLE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="districtName", property="districtName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cityName", property="cityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="provinceName", property="provinceName", jdbcType=JdbcType.VARCHAR),
        @Result(column="countryName", property="countryName", jdbcType=JdbcType.VARCHAR),
        @Result(column="themeTags", property="themeTags", jdbcType=JdbcType.VARCHAR),
        @Result(column="attentionDegree", property="attentionDegree", jdbcType=JdbcType.DOUBLE),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<SearchDemoEntity> selectByExample(SearchDemoEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @Select({
        "select",
        "ID, spotID, spotName, ename, lat, lon, address, districtName, cityName, provinceName, ",
        "countryName, themeTags, attentionDegree, createTime",
        "from demo",
        "where ID = #{ID,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="ID", property="ID", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="spotID", property="spotID", jdbcType=JdbcType.BIGINT),
        @Result(column="spotName", property="spotName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ename", property="ename", jdbcType=JdbcType.VARCHAR),
        @Result(column="lat", property="lat", jdbcType=JdbcType.DOUBLE),
        @Result(column="lon", property="lon", jdbcType=JdbcType.DOUBLE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="districtName", property="districtName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cityName", property="cityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="provinceName", property="provinceName", jdbcType=JdbcType.VARCHAR),
        @Result(column="countryName", property="countryName", jdbcType=JdbcType.VARCHAR),
        @Result(column="themeTags", property="themeTags", jdbcType=JdbcType.VARCHAR),
        @Result(column="attentionDegree", property="attentionDegree", jdbcType=JdbcType.DOUBLE),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    SearchDemoEntity selectByPrimaryKey(Long ID);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @UpdateProvider(type=SearchDemoEntitySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SearchDemoEntity record, @Param("example") SearchDemoEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @UpdateProvider(type=SearchDemoEntitySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SearchDemoEntity record, @Param("example") SearchDemoEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @UpdateProvider(type=SearchDemoEntitySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SearchDemoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table demo
     *
     * @mbggenerated Fri Jul 21 11:08:49 CST 2017
     */
    @Update({
        "update demo",
        "set spotID = #{spotID,jdbcType=BIGINT},",
          "spotName = #{spotName,jdbcType=VARCHAR},",
          "ename = #{ename,jdbcType=VARCHAR},",
          "lat = #{lat,jdbcType=DOUBLE},",
          "lon = #{lon,jdbcType=DOUBLE},",
          "address = #{address,jdbcType=VARCHAR},",
          "districtName = #{districtName,jdbcType=VARCHAR},",
          "cityName = #{cityName,jdbcType=VARCHAR},",
          "provinceName = #{provinceName,jdbcType=VARCHAR},",
          "countryName = #{countryName,jdbcType=VARCHAR},",
          "themeTags = #{themeTags,jdbcType=VARCHAR},",
          "attentionDegree = #{attentionDegree,jdbcType=DOUBLE},",
          "createTime = #{createTime,jdbcType=TIMESTAMP}",
        "where ID = #{ID,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(SearchDemoEntity record);
}